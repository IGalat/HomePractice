#    Persist db
#spring.datasource.url=jdbc:h2:file:./Spring/3.Boot-Rest-H2/spring-boot-h2-db
#spring.jpa.hibernate.ddl-auto=update

# On creating tables, output DDL to file too
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=Spring/3.Boot-Rest-H2/project-schema.sql

# Enabling H2 Console at http://localhost:8080/h2-console
# when entering, JDBC URL for in-memory DB:  jdbc:h2:mem:testdb   ;   else if spring.datasource.url is set, use its string
spring.h2.console.enabled=true


#    Logs section. Mostly obsolete - config is through logback-spring.xml , but hibernate.format_sql and banner-mode are here
# Show queries. std out, not logs - sucks.
#spring.jpa.show-sql=true
# Logs queries. Better option than to std out.
#logging.level.org.hibernate.SQL = debug
# Pretty queries. Works with both show-sql and h.SQL = debug
#spring.jpa.properties.hibernate.format_sql=true
# Also for queries, shows what args were used.
#logging.level.org.hibernate.type.descriptor.sql=trace
# To not pollute with BasicTypeRegistry bind on boot.
#logging.level.org.hibernate.type.BasicTypeRegistry=warn
# For logging aspect: all method calls and results
#logging.level.com.jr.aop=trace
# Banner to logs.
spring.main.banner-mode=log

#    Turn Statistics on
#spring.jpa.properties.hibernate.generate_statistics=true
#logging.level.org.hibernate.stat=debug


# Default threads is 0, which delegates to servers' default(tomcat's is 200)
server.tomcat.max-threads=250